"""
Django settings for tim_keeler project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import logging
import logging.config
import os

from tim_keeler.config import get_config

logging.config.dictConfig(get_config('logging'))
logger = logging.getLogger(__name__)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ASSET_DIR = os.path.join(BASE_DIR, 'assets')
DIST_DIR = os.path.join(BASE_DIR, 'dist')
SETTINGS = get_config('settings')

APP_ENVIRONMENT = SETTINGS['app']['environment']

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SETTINGS['app']['secret_key']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = SETTINGS['app']['debug']

ALLOWED_HOSTS = SETTINGS['app']['allowed_hosts']

ADMINS = [(admin['name'], admin['email'],) for admin in SETTINGS['admins']]

EMAIL_HOST = SETTINGS['email']['host']
EMAIL_PORT = SETTINGS['email']['port']
EMAIL_HOST_USER = SETTINGS['email']['username']
EMAIL_HOST_PASSWORD = SETTINGS['email']['password']
EMAIL_USE_TLS = SETTINGS['email']['tls']
EMAIL_SUBJECT_PREFIX = f'[{APP_ENVIRONMENT.upper()} - {SETTINGS["app"]["name"]}] '

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tim_app.apps.TimAppConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tim_keeler.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'tim_app.middleware.debug_context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'tim_keeler.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, '{}.sqlite3'.format(SETTINGS['db']['name'])),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATIC_ROOT = DIST_DIR
STATIC_URL = '/assets/'

STATICFILES_DIRS = [
    ASSET_DIR,
]

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

logger.info('Finished loading settings')
